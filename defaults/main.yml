---
# Channel of Telegraf to install
telegraf_install_version: stable

# The user and group telegraf should run under (should be set to telegraf unless needed otherwise)
telegraf_runas_user: telegraf
telegraf_runas_group: telegraf

# Configuration Template
telegraf_configuration_template: telegraf.conf.j2

# Configuration Variables
telegraf_tags:
telegraf_aws_tags: false
telegraf_aws_tags_prefix:

telegraf_agent_interval: 1s
telegraf_round_interval: "true"
telegraf_metric_batch_size: "1000"
telegraf_metric_buffer_limit: "10000"

telegraf_collection_jitter: 0s
telegraf_flush_interval: 10s
telegraf_flush_jitter: 0s
telegraf_debug: "false"
telegraf_quiet: "false"
telegraf_hostname:
telegraf_omit_hostname: "false"
telegraf_install_url:

telegraf_influxdb_urls:
  - http://localhost:8086
telegraf_influxdb_database: telegraf
telegraf_influxdb_precision: s
telegraf_influxdb_retention_policy: autogen
telegraf_influxdb_write_consistency: any
telegraf_influxdb_ssl_ca:
telegraf_influxdb_ssl_cert:
telegraf_influxdb_ssl_key:
telegraf_influxdb_insecure_skip_verify:

telegraf_influxdb_timeout: 5s
telegraf_influxdb_username:
telegraf_influxdb_password:
telegraf_influxdb_user_agent:
telegraf_influxdb_udp_payload:

telegraf_plugins_base:
  - name: mem
  - name: system
  - name: cpu
    options:
      percpu: "true"
      totalcpu: "true"
      fielddrop:
        - "time_*"
  - name: disk
    options:
      ignore_fs:
        - tmpfs
        - devfs
        - devtmpfs
        - overlay
        - iso9660
        - ceph
  - name: swap
  - name: processes
  - name: diskio
    options:
      skip_serial_number: "true"
  - name: kernel
  - name: kernel_vmstat
  - name: net
  - name: nstat
    options:
      dump_zeros: "true"
  - name: netstat
  - name: ethtool
  - name: internal
  - name: swap
  - name: sysstat
    options:
      interval: "10s"
      sadc_path: "/usr/lib/sysstat/sadc"
      activities:
        - "DISK"
        - "SNMP"
        - "INT"
      group: "true"
      options:
        -C: "cpu"
        -B: "paging"
        -b: "io"
        -d: "disk"
        -H: "hugepages"
        -I ALL: "interrupts"
        -n ALL: "network"
        -P ALL: "per_cpu"
        -q: "queue"
        -r ALL: "mem_util"
        -S: "swap_util"
        -u: "cpu_util"
        -v: "inode"
        -W: "swap"
        -w: "task"


telegraf_plugins: "{{ telegraf_plugins_base }} + {{ telegraf_plugins_extra | default([]) }}"

telegraf_influxdata_base_url: "https://repos.influxdata.com"

telegraf_unifi_snmp: False
telegraf_uap_ips: []
telegraf_edgeswitch_snmp: False
telegraf_edgeswitch_ips: []

snmp_pkgs:
  - snmp
  - libsnmp-base
  - snmp-mibs-downloader


metrics_pkgs:
  - sysstat
  - dstat
  - ifstat
  - lm-sensors
  - smartmontools

# Example Grok Patterns for use with logparser input
# Works with default nginx 'main' log and 'fail2ban.log' configured by ansible-nginx role.
nginx_accesslog_grokpattern: '%{CLIENT:client_ip} - %{NOTSPACE:ident} \[%{HTTPDATE:ts:ts-httpd}\] %{NOTSPACE:request_host:tag} "(?:%{WORD:verb:tag} %{NOTSPACE:request} (?:HTTP/%{NUMBER:http_version:float})?|%{DATA})" %{NUMBER:resp_code:tag} (?:%{NUMBER:resp_bytes:int}|-) "%{NOTSPACE:referrer}" "%{DATA:agent:tag}" (?:%{NUMBER:request_time}|-) (?:%{NUMBER:upstream_connect_time}|-) %{NOTSPACE:x_forwarded_for} %{NOTSPACE:upstream_cache_status:tag}'
fail2ban_banlog_grokpattern: '%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_src}.%{WORD:src_action} *\[%{INT:fail2ban_digit}\]: %{WORD:loglevel:tag} *\[%{NOTSPACE:service:tag}\] %{GREEDYDATA:ban_status:tag} %{IP:clientip:tag}'
